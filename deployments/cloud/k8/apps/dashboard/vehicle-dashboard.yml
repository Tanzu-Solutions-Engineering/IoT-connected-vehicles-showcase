apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run:  vehicle-dashboard
  name:  vehicle-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      run:  vehicle-dashboard
  template:
    metadata:
      labels:
        run:  vehicle-dashboard
        name:  vehicle-dashboard
    spec:
      containers:
        - env:
            - name: server.port
              value: "8080"
            - name: spring.rabbitmq.host
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-default-user
                  key: host
            - name: spring_rabbitmq_username
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-default-user
                  key:  username
            - name: spring_rabbitmq_password
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-default-user
                  key: password
            - name: spring.data.gemfire.pool.locators
              valueFrom:
                configMapKeyRef:
                  name: gemfire-config
                  key: locators
          image: cloudnativedata/vehicle-dashboard:0.0.1-SNAPSHOT
          imagePullPolicy: IfNotPresent
#          imagePullPolicy: Always
          name: vehicle-dashboard
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run:  vehicle-dashboard
  name: vehicle-dashboard
spec:
  selector:
    run:  vehicle-dashboard
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer